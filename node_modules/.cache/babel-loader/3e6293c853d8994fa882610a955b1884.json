{"ast":null,"code":"import _classCallCheck from \"/Users/kamchungtam/Downloads/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kamchungtam/Downloads/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kamchungtam/Downloads/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kamchungtam/Downloads/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kamchungtam/Downloads/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kamchungtam/Downloads/client/src/Components/Comment.js\";\nimport React, { Component } from \"react\";\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n    _this.state = {\n      commentList: _this.props.commentList\n    };\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.commentList); //received\n\n      if (this.state.commentList) {\n        {\n          this.state.commentList.map(function (comment, id) {\n            return React.createElement(\"div\", {\n              className: \"postContainer\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"col-sm-8\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, comment.text), React.createElement(\"div\", {\n              className: \"col-sm-4 text-secondary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            }, \"Posted By: \", comment.author, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26\n              },\n              __self: this\n            }), comment.postDate)));\n          });\n        }\n      }\n\n      return React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"there is no comment\");\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default Comment; // <div className=\"postContainer\">\n//         <div className=\"row\">\n//               <div className=\"col-sm-8\">\n//                 {this.props.text}\n//               </div>\n//               <div className=\"col-sm-4 text-secondary\">\n//                   Posted By: {this.props.author}<br />{this.props.postDate}\n//               </div>\n//             </div>\n//         </div>\n// {this.props.postData.comment.map(comment => {\n//           return (\n//             <Comment\n//               key={comment.commentID}\n//               text={comment.text}\n//               postDate={comment.postDate}\n//               author={comment.author}\n//             />\n//           );\n//         })}\n// if(this.props.commentList) {\n//       {this.props.commentList.map((comment, id) => {\n//           return (\n//             <div className=\"postContainer\">\n//         <div className=\"row\">\n//               <div className=\"col-sm-8\">\n//                 {comment.text}\n//               </div>\n//               <div className=\"col-sm-4 text-secondary\">\n//                   Posted By: {comment.author}<br />{comment.postDate}\n//               </div>\n//             </div>\n//         </div>\n//           );\n//         })}\n//     }\n//     return (\n//         <h4>there is no comment</h4>\n//         )","map":{"version":3,"sources":["/Users/kamchungtam/Downloads/client/src/Components/Comment.js"],"names":["React","Component","Comment","props","state","commentList","console","log","map","comment","id","text","author","postDate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWE;AADb,KAAb;AAHiB;AAMlB;;;;6BAGQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,WAAvB,EADO,CAC8B;;AAErC,UAAG,KAAKD,KAAL,CAAWC,WAAd,EAA2B;AACzB;AAAC,eAAKD,KAAL,CAAWC,WAAX,CAAuBG,GAAvB,CAA2B,UAACC,OAAD,EAAUC,EAAV,EAAiB;AACzC,mBACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACA;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGD,OAAO,CAACE,IADX,CADA,EAIA;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACgBF,OAAO,CAACG,MADxB,EAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD/B,EACsCH,OAAO,CAACI,QAD9C,CAJA,CADF,CADF;AAYD,WAbF;AAaI;AACN;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAGD;;;;EAjCmBZ,S;;AAoCtB,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nclass Comment extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      commentList: this.props.commentList\n    };\n  }\n\n\n  render() {\n    console.log(this.state.commentList); //received\n\n    if(this.state.commentList) {\n      {this.state.commentList.map((comment, id) => {\n          return (\n            <div className=\"postContainer\">\n              <div className=\"row\">\n              <div className=\"col-sm-8\">\n                {comment.text}\n              </div>\n              <div className=\"col-sm-4 text-secondary\">\n                  Posted By: {comment.author}<br />{comment.postDate}\n              </div>\n            </div>\n        </div>\n          );\n        })}\n    }\n    return (\n        <h4>there is no comment</h4>\n        )\n  }\n}\n\nexport default Comment;\n\n// <div className=\"postContainer\">\n//         <div className=\"row\">\n//               <div className=\"col-sm-8\">\n//                 {this.props.text}\n//               </div>\n//               <div className=\"col-sm-4 text-secondary\">\n//                   Posted By: {this.props.author}<br />{this.props.postDate}\n//               </div>\n//             </div>\n//         </div>\n\n\n// {this.props.postData.comment.map(comment => {\n//           return (\n//             <Comment\n//               key={comment.commentID}\n//               text={comment.text}\n//               postDate={comment.postDate}\n//               author={comment.author}\n//             />\n//           );\n//         })}\n\n\n\n\n// if(this.props.commentList) {\n//       {this.props.commentList.map((comment, id) => {\n//           return (\n//             <div className=\"postContainer\">\n//         <div className=\"row\">\n//               <div className=\"col-sm-8\">\n//                 {comment.text}\n//               </div>\n//               <div className=\"col-sm-4 text-secondary\">\n//                   Posted By: {comment.author}<br />{comment.postDate}\n//               </div>\n//             </div>\n//         </div>\n//           );\n//         })}\n//     }\n//     return (\n//         <h4>there is no comment</h4>\n//         )"]},"metadata":{},"sourceType":"module"}